version: 1

# Ordered list of preferred execution environments for WGX tasks.
env_priority:
  - default
  - devcontainer
  - devbox
  - mise_direnv
  - termux

# Toolchain expectations for this repository.
tooling:
  uv: "0.7.x"
  python:
    version: "3.12"
    uv: true
    precommit: true
  rust:
    cargo: auto
    clippy_strict: true
    fmt_check: true
    deny: optional

# Standardized task definitions that WGX orchestrates.
tasks:
  up:
    desc: "Bootstrap the developer environment"
    sh:
      - |
        if command -v devcontainer >/dev/null 2>&1 || [ -f .devcontainer/devcontainer.json ]; then
          echo "[wgx.up] devcontainer context detected"
        fi
        if command -v uv >/dev/null 2>&1; then
          uv --version || true
          [ -f pyproject.toml ] && uv sync --frozen || true
        fi
        if [ -f .pre-commit-config.yaml ] && command -v pre-commit >/dev/null 2>&1; then
          pre-commit install
        fi
  lint:
    desc: "Run fast static checks (Rust/Python/Docs)"
    sh:
      - |
        if [ -f Cargo.toml ]; then
          cargo fmt --all -- --check
          cargo clippy --all-targets --all-features -- -D warnings
        fi
        if [ -f pyproject.toml ] && command -v uv >/dev/null 2>&1; then
          uv run ruff check . || true
          uv run ruff format --check . || true
        fi
        command -v markdownlint >/dev/null 2>&1 && markdownlint "**/*.md" || true
        command -v yamllint    >/dev/null 2>&1 && yamllint . || true
  test:
    desc: "Execute the full testsuite"
    sh:
      - |
        [ -f Cargo.toml ] && cargo test --all --all-features || true
        if [ -f pyproject.toml ] && command -v uv >/dev/null 2>&1; then
          uv run pytest -q || true
        fi
  build:
    desc: "Build release artefacts"
    sh:
      - |
        [ -f Cargo.toml ] && cargo build --release || true
        if [ -f pyproject.toml ] && command -v uv >/dev/null 2>&1; then
          uv build || true
        fi
  smoke:
    desc: "Run quick smoke checks (<60s)"
    sh:
      - |
        echo "[wgx.smoke] repo=$(basename "$(git rev-parse --show-toplevel)")"
        [ -f Cargo.toml ] && cargo metadata --no-deps > /dev/null || true
        [ -f pyproject.toml ] && grep -q '^\[project\]\s*$' pyproject.toml || true

meta:
  owner: "heimgewebe"
  conventions:
    gewebedir: ".gewebe"
    version_endpoint: "/version"
    tasks_standardized: true
